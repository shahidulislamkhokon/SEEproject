---

- name: "Create Downloads folder"
  file:
    path: "{{ destination }}"
    state: directory

- name: "Update repositories cache." 
  apt:
    update_cache: yes


- name: "Safe system upgrade via aptitude."
  apt: 
    upgrade: safe        



- name: "Check if GitLab is already installed."
  stat: path=/usr/bin/gitlab-ctl
  register: gitlab_file


- name: "Install GitLab dependencies."
  package: name={{ item }} state=present
  with_items:
    - openssh-server
    - ca-certificates
    - curl
    - openssl
    - tzdata

    
- name: "Download GitLab repository installation script."
  get_url:
    url: "{{ gitlab_repository_installation_script_url }}"
    dest: /tmp/gitlab_install_repository.sh
    validate_certs: "{{ gitlab_download_validate_certs }}"
  when: not gitlab_file.stat.exists
  

- name: "Install GitLab repository."
  command: bash /tmp/gitlab_install_repository.sh
  when: not gitlab_file.stat.exists
  

- name: "Define the Gitlab package name."
  set_fact:
    gitlab_package_name: "{{ gitlab_edition }}{{ gitlab_package_version_separator }}{{ gitlab_version }}"
  when: gitlab_version != ''


- name: "Install GitLab"
  package:
    name: "{{ gitlab_package_name | default(gitlab_edition) }}"
    state: present
  when: not gitlab_file.stat.exists
  

- name: "Check if GitLab configuration file already exists."
  stat: path=/etc/gitlab/gitlab.rb
  register: gitlab_config_file
  
- name: "Replace the host into GitLab configuration"
  replace:
    path: /etc/gitlab/gitlab.rb
    regexp: "(\\s+)external_url 'http://gitlab.example.com'"
    replace: "\nexternal_url 'http://192.168.33.9/gitlab'"
    backup: yes
  when: gitlab_config_file.stat.exists

- name: "Uncomment configuration"
  replace:
    path: /etc/gitlab/gitlab.rb
    regexp: "#(\\s+)unicorn['port'] = 8080 "
    replace: "\nunicorn['port'] = 8088"
    backup: yes
  when: gitlab_config_file.stat.exists
    
- name: Insert New Line GitLab configuration
  lineinfile:
    path: /etc/gitlab/gitlab.rb
    backup: yes
    insertafter: "# unicorn['port'] = 8080 "
    line: "\nunicorn['port'] = 8088"
  when: gitlab_config_file.stat.exists
  
- name: Run a script with arguments (free form)
  script: scripts/restart_gitlab.sh 

  
